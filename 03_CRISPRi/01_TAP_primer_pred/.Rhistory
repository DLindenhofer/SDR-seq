knitr::opts_chunk$set(echo = TRUE)
target_gene_names <- as.character(read.csv('Input/RNA_gene_list_add.csv',header = FALSE)[,1])
knitr::opts_chunk$set(echo = TRUE)
amplicons_df <- read.delim("/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20230128_SDR001_Analysis/20230128_SDR001_gDNA_pre_Seurat/SDR001_gDNA_targets.txt")
amplicons_df_v2 <- read.delim("/Users/dominik.lindenhofer/ownCloud/Shared_project_folder/scDNA-scRNA-seq/20220927_scDNA-scRNA-seq_5_Mission_bio_SDR001_dCas9_PE/8_1_gDNA_REF-V2/SDR001_gDNA_targets.txt")
all.equal(amplicons_df, amplicons_df_v2)
amplicons_df <- read.delim("Input/SDR001_gDNA_targets.txt")
amplicons_bed <- read.delim("Input/SDR001_gDNA_amplicons.bed", header = FALSE)
colnames(amplicons_bed) <- c("Chromosome", "Start", "End", "ID")
all.equal(amplicons_df$Start, amplicons_bed$Start)
all.equal(amplicons_df$End, amplicons_bed$End)
#Only keep columns that are not NA
gDNA_targets_gr_1 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
gDNA_targets_gr_2 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
amplicons_bed <- read.delim("Input/SDR001_gDNA_amplicons.bed", header = FALSE)
library(BSgenome)
library(Biostrings)
library(dplyr)
library(stringr)
library(GenomicRanges)
library(biomaRt)
#Only keep columns that are not NA
gDNA_targets_gr_1 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
amplicons_df <- read.delim("Input/SDR001_gDNA_targets.txt")
amplicons_bed <- read.delim("Input/SDR001_gDNA_amplicons.bed", header = FALSE)
colnames(amplicons_bed) <- c("Chromosome", "Start", "End", "ID")
all.equal(amplicons_df$Start, amplicons_bed$Start)
all.equal(amplicons_df$End, amplicons_bed$End)
#Only keep columns that are not NA
gDNA_targets_gr_1 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
gDNA_targets_gr_2 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
Overlap <- countOverlaps(gDNA_targets_gr_1, gDNA_targets_gr_2)
gDNA_targets_gr_1$count_overlaps <- Overlap
gDNA_targets_df_1 <- as.data.frame(gDNA_targets_gr_1)
Overlap
# human genome BSgenome object (needs to be istalled from Bioconductor)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")
gDNA_targets <- amplicons_bed
gDNA_targets_seq <- data.frame()
for (i in unique(gDNA_targets$ID)){
gDNA_targets_i <- gDNA_targets %>% dplyr::filter(gDNA_targets$ID == i)
gDNA_targets_dna_i <- as.character(Biostrings::getSeq(hg38, gDNA_targets_i$Chromosome, gDNA_targets_i$Start,	gDNA_targets_i$End))
gDNA_targets_dna_i_df <- data.frame(ID = i, Chromosome = gDNA_targets_i$Chromosome, Start = gDNA_targets_i$Start, End = gDNA_targets_i$End,  Sequence = gDNA_targets_dna_i)
gDNA_targets_seq <- rbind(gDNA_targets_seq, gDNA_targets_dna_i_df)
}
library(biomaRt)
amplicons_df <- read.delim("Input/03_CRISPRi_gDNA_targets.txt")
amplicons_bed <- read.delim("Input/03_CRISPRi_gDNA_amplicons.bed", header = FALSE)
colnames(amplicons_bed) <- c("Chromosome", "Start", "End", "ID")
all.equal(amplicons_df$Start, amplicons_bed$Start)
all.equal(amplicons_df$End, amplicons_bed$End)
#Only keep columns that are not NA
gDNA_targets_gr_1 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
gDNA_targets_gr_2 <- makeGRangesFromDataFrame(amplicons_bed, keep.extra.columns = TRUE)
Overlap <- countOverlaps(gDNA_targets_gr_1, gDNA_targets_gr_2)
gDNA_targets_gr_1$count_overlaps <- Overlap
gDNA_targets_df_1 <- as.data.frame(gDNA_targets_gr_1)
# human genome BSgenome object (needs to be istalled from Bioconductor)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")
gDNA_targets <- amplicons_bed
gDNA_targets_seq <- data.frame()
for (i in unique(gDNA_targets$ID)){
gDNA_targets_i <- gDNA_targets %>% dplyr::filter(gDNA_targets$ID == i)
gDNA_targets_dna_i <- as.character(Biostrings::getSeq(hg38, gDNA_targets_i$Chromosome, gDNA_targets_i$Start,	gDNA_targets_i$End))
gDNA_targets_dna_i_df <- data.frame(ID = i, Chromosome = gDNA_targets_i$Chromosome, Start = gDNA_targets_i$Start, End = gDNA_targets_i$End,  Sequence = gDNA_targets_dna_i)
gDNA_targets_seq <- rbind(gDNA_targets_seq, gDNA_targets_dna_i_df)
}
to_write <- gDNA_targets_seq %>% select(ID, Sequence)
to_write <- gDNA_targets_seq %>% dplyr::select(ID, Sequence)
SDR001_annot <- read.delim("Input/03_CRISPRi_gDNA_targets_annotate.txt")
SDR001_annot <- SDR001_annot %>% mutate(Start_Amp = 1, End_Amp = End-Start+1 )
SDR001_variants_annot <- read.csv("Input/03_CRISPRi_variants_annotate.csv")
View(SDR001_variants_annot)
SDR001_variants_annot <- SDR001_variants_annot %>% filter(SNP_ID =! "control")
SDR001_variants_annot <- SDR001_variants_annot %>% dplyr::filter(SNP_ID =! "control")
SDR001_variants_annot <- SDR001_variants_annot %>% dplyr::filter(SNP_ID == !"control")
SDR001_variants_annot <- SDR001_variants_annot %>% dplyr::filter(SNP_ID =! "control")
SDR001_variants_annot <- read.csv("Input/03_CRISPRi_variants_annotate.csv")
SDR001_variants_annot <- SDR001_variants_annot %>% dplyr::filter(SNP_ID =! "control")
