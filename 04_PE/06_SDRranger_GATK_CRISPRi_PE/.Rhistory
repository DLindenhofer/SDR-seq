knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(dplyr)
library(ggplot2)
library(Matrix)
library(reshape2)
library(data.table)
library(stringr)
library(tidyr)
library(scales)
library(rtracklayer)
library(data.table)
library(readr)
library(here)
plot_save_dir <- "/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20240412_SDR001_SDRranger/SDR001_PE_Plots_GATK"
#Load in processed Seurat from cell filtering step
#all cells
cDNA_data_Seurat <- readRDS("/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20240412_SDR001_SDRranger/SDR001_PE_Plots/SDR001_PE_Seurat_filtered_clustered.rds")
#Load in variants file from GATK and VEP
#Adjust skip according to vcf file - skip header
all_var_full <- read_tsv("/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20240412_SDR001_SDRranger/SDR001_PE_Plots/06_VEP/SDR001_PE.vcf", skip = 60, col_names = TRUE)
#Fill in empty information properly
all_var_full <- all_var_full  %>% mutate(ID = ".", QUAL = ".", FILTER = ".", FORMAT = "GT:AD:DP:GQ:PL")
plot_save_dir <- "/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20240412_SDR001_SDRranger/SDR001_PE_Plots_GATK"
#Load in processed Seurat from cell filtering step
#all cells
cDNA_data_Seurat <- readRDS("/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20240412_SDR001_SDRranger/SDR001_PE_Plots/SDR001_PE_Seurat_filtered_clustered.rds")
#Load in variants file from GATK and VEP
#Adjust skip according to vcf file - skip header
all_var_full <- read_tsv("/Users/dominik.lindenhofer/Documents/Data_Local/202301_SDR001/20240412_SDR001_SDRranger/SDR001_PE_Plots/06_VEP/SDR001_PE.vcf", skip = 60, col_names = TRUE)
#Fill in empty information properly
all_var_full <- all_var_full  %>% mutate(ID = ".", QUAL = ".", FILTER = ".", FORMAT = "GT:AD:DP:GQ:PL")
cDNA_data_Seurat <- readRDS("SDR001_PE_Geno_full.rds")
View(cDNA_data_Seurat)
knitr::opts_chunk$set(echo = TRUE)
#get sequences for gDNA targets
SDR006_gDNA_amplicons <- read.csv("Input/05_BE_hg38_amplicon_pos.csv", header = TRUE)
colnames(SDR006_gDNA_amplicons) <- c("ID", "Chromosome", "Start", "End", "fwd_seq", "rev_seq", "target_name")
gDNA_targets_gr_1 <- makeGRangesFromDataFrame(SDR006_gDNA_amplicons, keep.extra.columns = TRUE)
gDNA_targets_gr_2 <- makeGRangesFromDataFrame(SDR006_gDNA_amplicons, keep.extra.columns = TRUE)
Overlap <- countOverlaps(gDNA_targets_gr_1, gDNA_targets_gr_2)
gDNA_targets_gr_1$count_overlaps <- Overlap
gDNA_targets_df_1 <- as.data.frame(gDNA_targets_gr_1)
# human genome BSgenome object (needs to be istalled from Bioconductor)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")
gDNA_targets <- SDR006_gDNA_amplicons
library(BSgenome)
library(Biostrings)
library(dplyr)
library(stringr)
library(here)
library(GenomicRanges)
library(GenomicRanges)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")
#get sequences for gDNA targets
gDNA_targets <- SDR006_gDNA_amplicons
gDNA_targets_seq <- data.frame()
for (i in unique(gDNA_targets$ID)){
gDNA_targets_i <- gDNA_targets %>% dplyr::filter(gDNA_targets$ID == i)
gDNA_targets_dna_i <- as.character(Biostrings::getSeq(hg38, gDNA_targets_i$Chromosome, gDNA_targets_i$Start,	gDNA_targets_i$End))
gDNA_targets_dna_i_df <- data.frame(ID = i, Chromosome = gDNA_targets_i$Chromosome, Start = gDNA_targets_i$Start, End = gDNA_targets_i$End,  Sequence = gDNA_targets_dna_i)
gDNA_targets_seq <- rbind(gDNA_targets_seq, gDNA_targets_dna_i_df)
}
gDNA_targets_seq <- gDNA_targets_seq %>% select(ID, Sequence)
SDR006_gRNAs <- read.csv("Input/05_BE_guidePlasmidSeqs.csv", header = TRUE)
id_split <- data.frame(do.call('rbind', strsplit(as.character(SDR006_gRNAs$ID),'_',fixed=TRUE)))
id_split <- id_split %>% mutate(ID =str_c(X2, ":", X4))
SDR006_gRNAs_ID_edit <- data.frame(ID = id_split$ID, Sequence = SDR006_gRNAs$Sequence)
SDR006_combined <- rbind(gDNA_targets_seq, SDR006_gRNAs_ID_edit)
knitr::opts_chunk$set(echo = TRUE)
SDR006_TAP <- read.delim(file="/Input/05_BE_TAP_seq_best_inner_primers_chromosomal_loc_add.txt")
SDR006_TAP <- read.delim(file="Input/05_BE_TAP_seq_best_inner_primers_chromosomal_loc_add.txt")
cDNA_targets <- SDR006_TAP %>% dplyr::select(ID = "seq_id.x", Chromosome = "seq_id.y", Start = "start.y", End = "end.y")
cDNA_targets <- cDNA_targets %>% filter(!is.na(Chromosome))
knitr::opts_chunk$set(echo = TRUE)
TAP_input_df <- read.delim("Input/RNA_gene_list.txt", header = TRUE)
#Call primer3 and blast installation paths
Sys.setenv(PATH = paste("/Users/dominik.lindenhofer/opt/anaconda3/bin", Sys.getenv("PATH"), sep = ":"))
Sys.setenv(PATH = paste("/Users/dominik.lindenhofer/ncbi-blast-2.13.0+/bin", Sys.getenv("PATH"),
sep = ":"))
library(TAPseq)
library(GenomicRanges)
library(BiocParallel)
library(BSgenome)
library(here)
#Set up ensembl and choose dataset
ensembl = useEnsembl(biomart="ensembl")
ensembl = useEnsembl(biomart="genes", dataset = "hsapiens_gene_ensembl")
library(TAPseq)
library(GenomicRanges)
library(BiocParallel)
library(BSgenome)
library(here)
library(biomaRt)
#Set up ensembl and choose dataset
ensembl = useEnsembl(biomart="ensembl")
target_gene_names <- as.character(read.delim('Input/RNA_gene_list.txt',header = TRUE)[,1])
knitr::opts_chunk$set(echo = TRUE)
#get sequences for gDNA targets
SDR005_gDNA_amplicons <- read.delim("Input/06_BCL.amplicons", header = FALSE)
#get sequences for gDNA targets
SDR005_gDNA_amplicons <- read.delim("/Input/06_BCL.amplicons", header = FALSE)
#get sequences for gDNA targets
SDR005_gDNA_amplicons <- read.delim("06_BCL.amplicons", header = FALSE)
colnames(SDR005_gDNA_amplicons) <- c("Chromosome", "Start", "End", "ID")
gDNA_targets_gr_1 <- makeGRangesFromDataFrame(SDR005_gDNA_amplicons, keep.extra.columns = TRUE)
gDNA_targets_gr_2 <- makeGRangesFromDataFrame(SDR005_gDNA_amplicons, keep.extra.columns = TRUE)
Overlap <- countOverlaps(gDNA_targets_gr_1, gDNA_targets_gr_2)
gDNA_targets_gr_1$count_overlaps <- Overlap
gDNA_targets_df_1 <- as.data.frame(gDNA_targets_gr_1)
# human genome BSgenome object (needs to be istalled from Bioconductor)
hg38 <- getBSgenome("BSgenome.Hsapiens.UCSC.hg38")
#get sequences for gDNA targets
SDR005_gDNA_amplicons <- read.delim("06_BCL.amplicons", header = FALSE)
colnames(SDR005_gDNA_amplicons) <- c("Chromosome", "Start", "End", "ID")
gDNA_targets <- SDR005_gDNA_amplicons
gDNA_targets_seq <- data.frame()
for (i in unique(gDNA_targets$ID)){
gDNA_targets_i <- gDNA_targets %>% dplyr::filter(gDNA_targets$ID == i)
gDNA_targets_dna_i <- as.character(Biostrings::getSeq(hg38, gDNA_targets_i$Chromosome, gDNA_targets_i$Start,	gDNA_targets_i$End))
gDNA_targets_dna_i_df <- data.frame(ID = i, Chromosome = gDNA_targets_i$Chromosome, Start = gDNA_targets_i$Start, End = gDNA_targets_i$End,  Sequence = gDNA_targets_dna_i)
gDNA_targets_seq <- rbind(gDNA_targets_seq, gDNA_targets_dna_i_df)
}
to_write <- gDNA_targets_seq %>% dplyr::select(ID, Sequence)
write.table(to_write, file = "06_BCL_gDNA_targets_seq.txt", quote = FALSE, row.names = FALSE, col.names = TRUE, sep = "\t")
SDR005_hg38_MB_input <- read.delim("06_BCL_hg38.bed", header = FALSE) %>% dplyr::select(Chromosome = V1, Start = V2, End = V3, Gene = V4)
SDR005_gDNA_amplicons_gr <- makeGRangesFromDataFrame(SDR005_gDNA_amplicons, keep.extra.columns = TRUE)
SDR005_hg38_MB_input_gr <- makeGRangesFromDataFrame(SDR005_hg38_MB_input, keep.extra.columns = TRUE)
Overlap <- findOverlaps(SDR005_gDNA_amplicons_gr, SDR005_hg38_MB_input_gr)
#gene_names <- CharacterList(split(SDR005_hg38_MB_input_gr$Gene[subjectHits(Overlap)],queryHits(Overlap)))
Gene<- split(SDR005_hg38_MB_input_gr$Gene[subjectHits(Overlap)], queryHits(Overlap))
Gene <- CharacterList(split(SDR005_hg38_MB_input_gr$Gene[subjectHits(Overlap)], queryHits(Overlap)))
mcols(SDR005_gDNA_amplicons_gr) <- DataFrame(mcols(SDR005_gDNA_amplicons_gr), Gene)
#Write to dataframe
SDR005_gDNA_amplicons_ass <- SDR005_gDNA_amplicons_gr %>% as.data.frame() %>% tibble::as_tibble()
SDR005_gDNA_amplicons_ass <- unnest(SDR005_gDNA_amplicons_ass, cols = Gene) %>% distinct()
View(SDR005_gDNA_amplicons_ass)
test <- read.delim("/Users/dominik.lindenhofer/ownCloud/Shared_project_folder/scDNA-scRNA-seq/20231006_SDR005_BCL_pilot/8_SDR005_Build_STAR_refs-gDNA-V4/SDR005_gDNA_seqs.csv")
View(SDR005_hg38_MB_input_gr)
View(test)
test <- read.csv("/Users/dominik.lindenhofer/ownCloud/Shared_project_folder/scDNA-scRNA-seq/20231006_SDR005_BCL_pilot/8_SDR005_Build_STAR_refs-gDNA-V4/SDR005_gDNA_seqs.csv")
View(test)
all.equal(to_write, test)
knitr::opts_chunk$set(echo = TRUE)
#Load data
SDR005_TAP <- read.delim(file="Input/06_BCL_TAP_seq_best_inner_primers_chromosomal_loc_add.txt")
cDNA_targets <- SDR005_TAP %>% dplyr::select(ID = "seq_id.x", Chromosome = "seq_id.y", Start = "start.y", End = "end.y")
cDNA_targets <- cDNA_targets %>% filter(!is.na(Chromosome))
